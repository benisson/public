{"version":3,"sources":["webpack:///src/assets/event-bus-app-baking.js","webpack:///src/assets/app-shared-data.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;;AAEA;;AAEA;AACA;AACA,oCAAoC;AACpC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,iC;CC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wB;AACA;;;AAGA,4C","file":"scripts.js","sourcesContent":["/**\n * @description\n * \n * Simples barramentos de eventos.\n * \n * Baseado no https://github.com/PierfrancescoSoffritti/light-event-bus.js\n * \n */\nfunction EventBusBanking() \n{\n    const subscriptions = { };\n  \n    this.subscribe = function subscribeCallbackToEvent(eventType, callback) \n    {\n    \n      const id = Symbol('id');\n    \n      if (!subscriptions[eventType]) \n      {\n        subscriptions[eventType] = { };\n      }\n      \n      subscriptions[eventType][id] = callback;\n      \n      return {\n        unsubscribe: function unsubscribe() {\n          delete subscriptions[eventType][id];\n          if (Object.getOwnPropertySymbols(subscriptions[eventType]).length === 0) {\n            delete subscriptions[eventType];\n          }\n        },\n      };\n    };\n  \n    this.publish = function publishEventWithArgs(eventType, arg) {\n      if (!subscriptions[eventType]) return;\n  \n      Object.getOwnPropertySymbols(subscriptions[eventType])\n        .forEach(key => subscriptions[eventType][key](arg));\n    };\n  }\n\n  const APP_EVENT_BUS = new EventBusBanking();\n  \n  //export default APP_EVENT_BUS;","/**\n * Informações compartilhadas entre a aplicação container e os\n * micro frontends.\n * \n */\nfunction AppSharedData()\n{\n   this.userData = null; \n}\n\n\nconst APP_SHARED_DATA = new AppSharedData();"],"sourceRoot":""}