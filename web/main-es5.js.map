{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/components/menu/menu.component.ts","webpack:///./src/app/components/menu/menu.component.html","webpack:///./src/app/components/menu/menu.module.ts","webpack:///./src/app/components/menu/shared/menu-item.model.ts","webpack:///./src/app/components/menu/shared/menu.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'home'\n  },\n  {\n    path: 'home',\n    loadChildren: () => import('./home/home.module').then(mod => mod.HomeModule)\n  },\n  {\n    path: 'load-app',\n    loadChildren: () => import('./load-app/load-app.module').then(mod => mod.LoadAppModule)\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    onSameUrlNavigation: 'reload'\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MenuItem } from './components/menu/shared/menu-item.model';\nimport { AppService } from './app.service';\nimport { Router } from '@angular/router';\n\ndeclare const APP_SHARED_DATA;\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    public appService: AppService,\n    public router:Router) { }\n\n\n  public userCurrent:any;  \n\n  ngOnInit(): void {\n    this.initDateUser();\n\n  }\n\n  /**\n   * Simulando os dados do usu√°rio logado\n   */\n  private initDateUser() {\n    APP_SHARED_DATA.userData = { 'name': 'Brendan Eich', 'cod': 903993, 'phone_number': '34-96545-0540', 'avatar':'assets/img/avatar_client_903993.png' }\n  \n    this.userCurrent = APP_SHARED_DATA.userData;\n  }\n\n  /**\n   * Recebe o item selecionado no menu.\n   * \n   * @param menuItem \n   */\n  public receiveItemMenu(menuItem: MenuItem) {\n   this.appService.menuItemSelected = menuItem;\n   this.router.navigate(['load-app']);\n  }\n\n\n\n\n\n\n}\n","<mat-toolbar>\n    <img routerLink=\"/\"  style=\"cursor: pointer;\" src=\"assets/img/logo.png\" style=\"width: 3%;\">\n\n    <span  routerLink=\"/\" style=\"padding-left: 5px;cursor: pointer;\"> JS Bank</span>\n    <span class=\"example-fill-remaining-space\"> </span>\n\n\n    <span> <h3  style=\"margin-left: 10px;\">{{userCurrent.name}} </h3></span>\n    <span style=\"width: 50px; margin-left: 10px;\"> <img src=\"{{userCurrent.avatar}}\" style=\"width: 100%;float: right;\"></span>\n\n\n</mat-toolbar>\n\n\n\n<mat-drawer-container class=\"container\">\n    <mat-drawer mode=\"side\" opened>\n        <app-menu (emitItemSelected)=\"receiveItemMenu($event)\"></app-menu>\n    </mat-drawer>\n    <mat-drawer-content>\n        <router-outlet></router-outlet>\n    </mat-drawer-content>\n</mat-drawer-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MenuModule } from './components/menu/menu.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MenuModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule\n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { MenuItem } from './components/menu/shared/menu-item.model';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppService {\n\n    /**\n     * ID do elemento para inserir apps.\n     */\n    public idContainer:string = \"idContainer\";\n\n    /**\n     * Item de menu selecionado.\n     */\n    public menuItemSelected: MenuItem;\n\n    constructor() { }\n\n\n}","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { MenuService } from './shared/menu.service';\nimport { MenuItem } from './shared/menu-item.model';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  @Output()\n  public emitItemSelected = new EventEmitter<MenuItem>();\n\n  public menuItens: Array<MenuItem>;\n\n  constructor(private menuService: MenuService) { }\n\n  ngOnInit() \n  {\n    this.findMenuOptions();\n  }\n\n\n  private findMenuOptions()\n  {\n      this.menuService\n          .findMenuOptions()\n          .subscribe(menu =>\n            {\n                this.menuItens = menu;\n            })\n  }\n\n  /**\n   * Recebe o item selecionado e emite o evento passando o item.\n   * \n   * @param item \n   */\n  public selectedItem(item:MenuItem)\n  {\n      this.emitItemSelected.emit(item);\n  }\n}\n","<div class=\"vertical-menu\">\n    <div (click)=\"selectedItem(item)\" \n         *ngFor=\"let item of menuItens\"> \n         <mat-icon>{{item.icon}}</mat-icon>\n        \n        <span> {{item.name}} </span>\n        </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuComponent } from './menu.component';\nimport { MenuService } from './shared/menu.service';\nimport {MatIconModule} from '@angular/material/icon';\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  declarations: [MenuComponent],\n  exports : [MenuComponent],\n  providers : [MenuService]\n})\nexport class MenuModule { }\n","export class MenuItem\n{\n    public cod:number;\n    public name:string;\n    public tag:string;\n    public pathApp:string;\n    public pathOption:string;\n    public icon:string;\n   \n\n    constructor(cod:number, name:string, tag:string, pathApp:string, pathOption:string, icon:string)\n    {\n        this.cod = cod;\n        this.name = name;\n        this.tag = tag;\n        this.pathApp = pathApp;\n        this.pathOption = pathOption;\n        this.icon = icon;\n    }\n}","import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { MenuItem } from './menu-item.model';\n\n@Injectable()\nexport class MenuService {\n\n    /**\n     * Pesquisa as op√ß√µes do menu.\n     * \n     */\n    public findMenuOptions(): Observable<Array<MenuItem>> {\n        return this.responseMockMenuOptions();\n    }\n\n    /**\n     * Simulando a resposta da API respons√°vel por trazer as informa√ß√µes do menu.\n     */\n    private responseMockMenuOptions() {\n        return of(\n            [\n                new MenuItem(1, 'Seguros', '<app-seguros></app-seguros>', '/public/seguros', '/app-seguros/seguro-residencial', 'security'),\n                new MenuItem(2, 'Cart√£o ', '<app-cartoes></app-cartoes>', '/public/cartoes', '/app-cartoes/cartao-virtual', 'credit_card'),\n            ]\n        )\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverStatic: \"http://localhost:8000\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}