{"version":3,"sources":["webpack:///./src/app/load-app/load-app.component.ts","webpack:///./src/app/load-app/load-app.component.html","webpack:///./src/app/load-app/load-app.module.ts","webpack:///./src/app/load-app/shared/load-app.service.ts"],"names":[],"mappings":"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","file":"load-app-load-app-module-es2015.js","sourcesContent":["import { Component, OnInit, InjectionToken } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { LoadAppService } from './shared/load-app.service';\nimport { Router } from '@angular/router';\ndeclare const APP_EVENT_BUS;\n\n@Component({\n  selector: 'app-load-app',\n  templateUrl: './load-app.component.html'\n})\nexport class LoadAppComponent implements OnInit {\n\n\n\n  constructor(\n    public appService: AppService, \n    private loadAppService: LoadAppService,\n    private router:Router ) { }\n\n  ngOnInit() \n  {\n    this.loadAppService.loadApp(this.appService.menuItemSelected);\n    this.listenerGoHome();\n  }\n\n\n  public listenerGoHome()\n  {\n    APP_EVENT_BUS.subscribe(\"go-home\", go =>\n    {\n      console.log(\"go home >>>>>\"); \n      this.loadAppService.unloadApp();\n      this.router.navigate(['/home']);\n    })\n  }\n}\n","<div id=\"{{appService.idContainer}}\"></div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadAppComponent } from './load-app.component';\nimport { RouterModule } from '@angular/router';\nimport { LoadAppService } from './shared/load-app.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path : '',\n        component : LoadAppComponent\n      }\n    ])\n  ],\n  declarations: [LoadAppComponent],\n  providers: [LoadAppService]\n})\nexport class LoadAppModule { }\n","import { Injectable, Inject } from '@angular/core';\nimport { MenuItem } from 'src/app/components/menu/shared/menu-item.model';\nimport { DOCUMENT } from '@angular/common';\nimport { AppService } from 'src/app/app.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\ndeclare const APP_EVENT_BUS;\n\n@Injectable()\nexport class LoadAppService {\n\n    constructor(\n        @Inject(DOCUMENT) private document: Document,\n        private appService: AppService,\n        private httpClient: HttpClient) { }\n\n    private configAppCurrent:any;\n    /**\n     * Inclui a nova app a ser rederizada na pagina.\n     * \n     * @param itemMenu \n     */     \n    public loadApp(itemMenu: MenuItem) {\n        if (itemMenu)\n        {\n            this.findConfigApp(itemMenu.pathApp)\n                .subscribe(configApp => {\n                    this.configAppCurrent = configApp;\n                    this.loadTag(itemMenu.tag);\n                    this.loadScriptsShared();\n                    this.loadScripts(configApp.tagName, itemMenu.pathApp, configApp.scripts);\n                })\n\n        }\n    }\n\n     /**\n      * Inclui a tag do custom element da funcionalidade dentro da div container da\n      * página.\n      * \n      * @param tag \n      */\n     private loadTag(tag:string)\n     {\n        if(tag)\n        {\n            const idContainer = this.appService.idContainer;\n            const container = this.document.getElementById(idContainer);\n            container.innerHTML = tag;\n        }\n     }\n\n\n    /**\n     * Verifica se a tag que envolve os scripts já esta no DOM,\n     * caso não esteja cria uma tag span e inclui as tags scripts\n     * e adiciona ao header da pagina.\n     * \n     * @param scripts \n     */\n    private loadScripts(tagName: string, pathApp:string, scripts: Array<string>) \n    {\n    \n        if (scripts && scripts.length)\n        {\n            const idSpanContainerScript = \"id\" + tagName;\n\n            const spanContainerLoaderd = this.document.getElementById(idSpanContainerScript);\n\n            if (!spanContainerLoaderd)\n            {\n                const spanContainerScript = this.document.createElement(\"span\");\n\n                for (const script of scripts)\n                {\n                    spanContainerScript.id = \"id\" + tagName;\n\n                    const elementScript = this.document.createElement(\"script\");\n\n                    elementScript.src = environment.serverStatic + pathApp + \"/\" + script;\n                    //elementScript.src =  script;\n                    spanContainerScript.appendChild(elementScript);\n                }\n\n                /**\n                 * TODO - INCLUIR NO HEAD NÃO É LEGAL, COLOCAR NO BODY\n                 */\n                const header = this.document.getElementsByTagName(\"head\")[0];\n                header.appendChild(spanContainerScript);\n\n            }\n        }\n    }\n\n    private loadScriptsShared() \n    {\n    \n        const idSpanSharedScript = \"idSharedScript\";\n        const spanContainerLoaderd = this.document.getElementById(idSpanSharedScript);\n\n        if (!spanContainerLoaderd)\n        {\n            const elementScript = this.document.createElement(\"script\");\n            elementScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/zone.js/0.9.1/zone.min.js\";\n\n            const spanSharedScript = this.document.createElement(\"span\");\n            spanSharedScript.id = idSpanSharedScript;\n            spanSharedScript.appendChild(elementScript);\n\n            const header = this.document.getElementsByTagName(\"head\")[0];\n            header.appendChild(spanSharedScript);\n        }\n\n    }\n\n    /**\n     * Busca as configurações da app a ser carregada.\n     * \n     * \n     * @param pathApp \n     */\n    private findConfigApp(pathApp: string): Observable<any> \n    {\n        //return this.httpClient.get(\"/config-app.json\");\n        return this.httpClient.get(environment.serverStatic +  pathApp + \"/config-app.json\");\n    }\n\n\n    private addlistener() \n    {\n        const appSeguros = this.document.getElementsByTagName(\"app-seguros\")[0];\n\n        appSeguros.addEventListener('emitTypeSeguro', event => {\n            console.log(event);\n        })\n    }\n\n\n    public unloadApp()\n    {\n        const elementApp = this.document.getElementsByTagName(this.configAppCurrent.tagName);\n\n        if(elementApp && elementApp.length)\n        {\n            elementApp[0].remove();\n        }\n       \n    }\n}"],"sourceRoot":""}